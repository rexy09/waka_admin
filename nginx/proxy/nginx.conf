# ------------------------------
# Domain: devapp.sanalogistic.com (React)
# ------------------------------

# HTTP - Serve ACME challenge and redirect to HTTPS
server {
    listen 80;
    server_name devapp.sanalogistic.com;

    # Serve ACME challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Serve React app
server {
    # listen 80;
    listen 443 ssl;
    server_name devapp.sanalogistic.com;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # SSL certificate paths
    ssl_certificate     /etc/letsencrypt/live/devapp.sanalogistic.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/devapp.sanalogistic.com/privkey.pem;

    # Proxy to React app
    location / {
        proxy_pass http://nginx:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# ------------------------------
# Domain: devauth.sanalogistic.com (Node)
# ------------------------------

# HTTP - Serve ACME challenge and redirect to HTTPS
server {
    listen 80;
    server_name devauth.sanalogistic.com;

    # Serve ACME challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Proxy to Node app
server {
    # listen 80;
    listen 443 ssl;
    server_name devauth.sanalogistic.com;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # SSL certificate paths
    ssl_certificate     /etc/letsencrypt/live/devauth.sanalogistic.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/devauth.sanalogistic.com/privkey.pem;

    # Proxy to Node app
    location / {
        proxy_pass http://app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}